
# ---------------------------------------------------------------------
# Copyright (c) William Fonkou Tambe
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ---------------------------------------------------------------------


`include "../enums"

`locdef push(X)
addi %0, %0, -sizeof(uint);
str X, %0;
`enddef

# Read from file.
uint read (uint fd, u8* ptr, uint sz) {
	
	asm {
		# Label created so that the
		# compiler flush all registers.
		flushallregs:
		
		# The calling convention of
		# the lyrical syscall function
		# is cdecl.
		
		# Retrieve argument value now
		# since the stack pointer register
		# will be modified.
		cpy %1, fd;
		cpy %2, ptr;
		cpy %3, sz;
		cpy %4, ((void**)&(&arg))[2];
		
		push(%3);
		push(%2);
		push(%1);
		li %1, LYRICALSYSCALLREAD;
		push(%1);
		
		jpushr %4;
		
		# Restore the stack.
		addi %0, %0, 4*sizeof(uint);
		
		# Retrieve syscall return value.
		cpy retvar, %1;
	}
}
